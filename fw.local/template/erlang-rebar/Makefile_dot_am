include $(top_srcdir)/fw/build/automake/Makefile_dot_am

REBAR_OPTS="skip_deps=true"
erlappdir="@ERLAPPDIR@"
erlappcsrcdir="$(erlappdir)"
erlappsrcdir="$(erlappdir)/src"
erlappebindir="$(erlappdir)/ebin"
erlappprivdir="$(erlappdir)"
erlappincludedir="$(erlappdir)/include"
erlapptestdir="$(erlappdir)/test"
erldocdir="@ERLDOCDIR@"

dist_erlappsrc_DATA = $(wildcard src/*.erl) $(wildcard src/*.hrl)
dist_erlappebin_DATA = $(wildcard ebin/*.beam) $(wildcard ebin/*.app)
dist_erlappinclude_DATA = $(wildcard include/*.hrl)
nobase_dist_erlappcsrc_DATA = $(shell if test -d c_src -o -h c_src ; then find c_src -follow -type f ; fi)
nobase_dist_erlapppriv_DATA = $(shell if test -d priv -o -h priv ; then find priv -follow -type f ; fi)

DIALYZERFLAGS := -I include/ $(FW_DIALYZERFLAGS) 

rebar:
	@ln -sf $(REBAR) rebar

all: .generated_app_file rebar
	FW_REBAR_BUILD=1 ./rebar $(REBAR_OPTS) compile

.dialyzer_ok: $(wildcard src/*.erl) $(wildcard src/*.hrl) $(wildcard include/*.hrl)
	@if test -z "$(NO_DIALYZE)" ; then \
	  if test -z "$(SUPPORT_DIALYZE)" ; then \
	    FW_REBAR_BUILD=1 ./rebar $(REBAR_OPTS) dialyze ; \
	  else \
	    dialyzer $(DIALYZERFLAGS) --src -c src && touch .dialyzer_ok ; \
	  fi ; \
	fi

.PHONY: check-local clean-local

check: check-local

check-local:: rebar .dialyzer_ok
	if test -z "$(NO_EUNIT)" ; then \
	  FW_REBAR_BUILD=1 ./rebar $(REBAR_OPTS) compile eunit ; \
	fi

clean: rebar clean-am clean-local
	@rm -f .dialyzer_ok
	FW_REBAR_BUILD=1 ./rebar $(REBAR_OPTS) clean

EXTRA_DIST += \
  $(dist_erlappinclude_DATA) \
  $(dist_erlappsrc_DATA) \
  $(dist_erlappcsrc_DATA) \
  $(dist_erlappebin_DATA) \
  rebar \
  rebar.config \
  rebar.config.script

if FW_ERLANG_WANT_ERLRC
install-data-hook::
	mkdir -p "${DESTDIR}@ERLRCDIR@/applications"
	touch "${DESTDIR}@ERLRCDIR@/applications/@FW_ERL_APP_NAME@"
else
install-data-hook::

endif

.generated_app_file: $(wildcard src/*.erl) $(wildcard src/*.hrl) $(wildcard include/*.hrl)
	@cd @top_srcdir@ && {                                         \
			if test -d fw/bin;                                   \
				then                                             \
					PATH="`pwd`/fw/bin:$$PATH";                  \
					export PATH;                                 \
					FW_ROOT="`pwd`/fw";                          \
					export FW_ROOT;                              \
					(cd fw && ln -sf .. share);                  \
				fi;                                              \
			fw-exec template/erlang-rebar/make-app-file --top "`pwd`"; \
	} && touch .generated_app_file

maintainer-clean-local::
	FW_REBAR_BUILD=1 ./rebar $(REBAR_OPTS) clean
	@rm -f .dialyzer_ok
	@rm -f .generated_app_file
	@rm -rf .eunit
	if test -n "$(FW_WRAP_GITNAME)" ; then rm -rf $(FW_WRAP_GITNAME) ; fi
	for f in ebin include priv rebar rebar.config rebar.config.script c_src src test ; do \
	  if test -L $$f ; then \
	    rm -f $$f ; \
	  fi ; \
	done
	@if test -d ebin ; then rm -rf ebin ; fi

clean-local::
